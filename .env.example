# =============================================================================
# DataHub Demonstration Project - Environment Configuration
# =============================================================================
# Copy this file to .env and adjust the values as needed
# Usage: cp .env.example .env

# =============================================================================
# PostgreSQL Database Configuration (Demo Database)
# =============================================================================
# These settings connect to the demo PostgreSQL database started with:
# cd databases/postgresql && docker compose up -d

# PostgreSQL Host (use 'localhost' for local development)
POSTGRES_HOST=localhost

# PostgreSQL Port
POSTGRES_PORT=5432

# PostgreSQL Username
POSTGRES_USER=postgres

# PostgreSQL Password
POSTGRES_PASSWORD=postgres

# PostgreSQL Database Name
POSTGRES_DB=mydb

# PostgreSQL Connection Pool Settings (Optional)
# POSTGRES_POOL_MIN_SIZE=1
# POSTGRES_POOL_MAX_SIZE=10

# =============================================================================
# DataHub Configuration
# =============================================================================
# DataHub GMS (General Metadata Service) Host
DATAHUB_GMS_HOST=localhost

# DataHub GMS Port
DATAHUB_GMS_PORT=8080

# DataHub GMS Protocol (http or https)
DATAHUB_GMS_PROTOCOL=http

# DataHub Frontend URL
DATAHUB_FRONTEND_URL=http://localhost:9002

# DataHub API Token
# Generate a token in DataHub UI: Settings -> Access Tokens -> Generate New Token
# Or use the default token from a quickstart deployment
DATAHUB_TOKEN=eyJhbGciOiJIUzI1NiJ9.eyJhY3RvclR5cGUiOiJVU0VSIiwiYWN0b3JJZCI6ImRhdGFodWIiLCJ0eXBlIjoiUEVSU09OQUwiLCJ2ZXJzaW9uIjoiMiIsImp0aSI6ImE5ZjQ1YjFiLTlkYTUtNDNjMy1hZDA3LTMyZDM4NmQwNDVlMyIsInN1YiI6ImRhdGFodWIiLCJpc3MiOiJkYXRhaHViLW1ldGFkYXRhLXNlcnZpY2UifQ.f3Zi0BdoKi-MT1tDfscGMUNL7tkuYz7714d54PnLWN4

# =============================================================================
# CLI Configuration
# =============================================================================
# Enable debug mode for CLI (prints more verbose output)
DEBUG=false

# Default locale for Faker data generation
FAKER_LOCALE=en_US

# Default output format (table, json, csv)
OUTPUT_FORMAT=table

# =============================================================================
# Ingestion Configuration (Optional)
# =============================================================================
# These are used if you want to run ingestion programmatically from CLI

# Ingestion recipe file path
# INGESTION_RECIPE_PATH=./ingest.yml

# Run ingestion on startup
# AUTO_INGEST=false

# Ingestion schedule (cron format)
# INGESTION_SCHEDULE="0 0 * * *"

# =============================================================================
# Logging Configuration
# =============================================================================
# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log file path (leave empty to log to console only)
# LOG_FILE=./logs/dhub.log

# =============================================================================
# Development Settings
# =============================================================================
# Enable development mode
# DEV_MODE=false

# Enable SQL query logging
# SQL_ECHO=false
